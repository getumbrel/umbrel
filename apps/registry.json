[
    {
      "id": "nextcloud",
      "category": "Files",
      "name": "Nextcloud",
      "version": "22.1.1",
      "tagline": "Productivity platform that keeps you in control",
      "description": "Nextcloud puts your data at your fingertips, under your control. Store your documents, calendar, contacts and photos on your Umbrel instead of some company's data center. Features:\n\n- Mobile and desktop sync \n- Versioning and undelete \n- Galleries and activity feed \n- File editing and preview support for PDF, images, text files, Open Document, Word files and more. \n- Smooth performance and easy user interface. \n- Fine-grained control over access to data and sharing capabilities by user and by group.\n\nNote: After logging in to Nextcloud please change the password to something secure before sharing the address with anyone.",
      "developer": "Nextcloud GmbH",
      "website": "https://nextcloud.com",
      "dependencies": [],
      "repo": "https://github.com/nextcloud/server",
      "support": "https://help.nextcloud.com/categories",
      "port": 8081,
      "gallery": [
          "1.jpg",
          "2.jpg",
          "3.jpg"
      ],
      "path": "",
      "defaultUsername": "umbrel",
      "deterministicPassword": true,
      "torOnly": false
    },
    {
        "id": "photoprism",
        "category": "Files",
        "name": "PhotoPrism",
        "version": "20210925",
        "tagline": "Self-host your photo and video library",
        "description": "PhotoPrism® is a privately hosted app for browsing, organizing, and sharing your photo collection. It makes use of the latest technologies to tag and find pictures automatically without getting in your way. Say goodbye to solutions that force you to upload your visual memories to the cloud!\n\n- Our intuitive user interface makes browsing and organizing your photo collection as easy as it should be — whether it’s on a phone, tablet, or desktop computer.\n\n- Index everything without worrying about duplicates or RAW to JPEG conversion.\n\n- Automatic image classification based on Google TensorFlow. In addition, our indexer detects colors, chroma, luminance, quality, panoramic projection, location type, and many other properties.\n\n- Includes four high-resolution world maps to see where you've been, and for rediscovering long-forgotten shots.\n\n- WebDAV clients, like Microsoft’s Windows Explorer or Apple's Finder, may connect directly to PhotoPrism so that you to can open, edit, and delete files from your computer or phone as if they were local. You may easily sync your pictures with PhotoSync as well.\n\n- Because PhotoPrism is built as a progressive web app, it provides a native app-like experience, and you may install it on your home screen. There's also a community-maintained native app in development.",
        "developer": "PhotoPrism",
        "website": "https://photoprism.app",
        "dependencies": [],
        "repo": "https://github.com/photoprism/photoprism",
        "support": "https://gitter.im/browseyourlife/community",
        "port": 8087,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "deterministicPassword": true,
        "torOnly": false
    },
    {
        "id": "pi-hole",
        "category": "Networking",
        "name": "Pi-hole",
        "version": "2021.10.1",
        "tagline": "Block ads on your entire network",
        "description": "Instead of browser plugins or other software on each computer, install Pi-hole® on your Umbrel and your entire network is protected. Network-level blocking allows you to block ads in non-traditional places such as mobile apps and smart TVs, regardless of hardware or OS. Since advertisements are blocked before they are downloaded, network performance is improved and will feel faster. \n\nIn addition to blocking advertisements, Pi-hole® has an informative Web interface that shows stats on all the domains being queried on your network. Pi-hole® works fine with an existing DHCP server, but you can use Pi-hole®’s to keep your network management in one place.\n\n Pi-hole® and the Pi-hole® logo are registered trademarks of Pi-hole. Umbrel is not sponsored, endorsed by, or associated with Pi-hole®.",
        "developer": "Pi-hole®",
        "website": "https://pi-hole.net",
        "dependencies": [],
        "repo": "https://github.com/pi-hole/pi-hole",
        "support": "https://discourse.pi-hole.net",
        "port": 8082,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "deterministicPassword": true,
        "torOnly": false
    },
    {
        "id": "home-assistant",
        "category": "Automation",
        "name": "Home Assistant",
        "version": "2021.9.6",
        "tagline": "Home automation that puts local control & privacy first",
        "description": "Open source home automation that puts local control and privacy first, powered by a worldwide community of tinkerers and DIY enthusiasts. Home Assistant integrates with over a thousand different devices and services. Once you have integrated all your devices at home, you can unleash Home Assistant’s advanced automation engine to make your home work for you. Examples: \n\n- Turn on the light when the sun sets or when coming home \n- Alert you when you leave your garage door open \n\nAll your smart home data stays local. Home Assistant communicates with your devices locally, and will fallback to pulling in data from the cloud if there is no other option. No data is stored in the cloud, and everything is processed locally.",
        "developer": "Home Assistant",
        "website": "https://home-assistant.io",
        "dependencies": [],
        "repo": "https://github.com/home-assistant/core",
        "support": "https://community.home-assistant.io",
        "port": 8083,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": "",
        "torOnly": false
    },
    {
        "id": "node-red",
        "category": "Automation",
        "name": "Node-RED",
        "version": "2.0.6-12",
        "tagline": "Wire together the Internet of Things",
        "description": "Node-RED is a visual programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.\n\nIt provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click. A built-in library allows you to save useful functions, templates or flows for re-use.\n\nThe flows created in Node-RED are stored using JSON which can be easily imported and exported for sharing with others. An online flow library allows you to share your best flows with the world.\n\nWarning: Node-RED on Umbrel is able to connect directly to Bitcoin Core, LND and Electrum, due to this you should be careful when installing third-party Node-RED nodes.",
        "developer": "OpenJS Foundation",
        "website": "https://nodered.org",
        "dependencies": [
            "bitcoind",
            "electrum",
            "lnd"
        ],
        "repo": "https://github.com/node-red/node-red",
        "support": "https://nodered.org/about/community/slack/",
        "port": 1880,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "umbrel",
        "defaultPassword": "moneyprintergobrrr",
        "torOnly": false
    },
    {
        "id": "code-server",
        "category": "Development",
        "name": "code-server",
        "version": "3.11.1",
        "tagline": "Run VS Code on your Umbrel",
        "description": "Run VS Code on your Umbrel and access it in the browser so you can code on any device with a consistent development environment. This way you can use your Umbrel not only to code from any device, anywhere, but to also speed up tests, compilations, downloads, and more.\n\nBy running all intensive tasks run on your Umbrel, preserve battery life of your devices when you're on the go.",
        "developer": "Coder",
        "website": "https://coder.com",
        "dependencies": [],
        "repo": "https://github.com/cdr/code-server",
        "support": "https://github.com/cdr/code-server/discussions",
        "port": 8091,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "deterministicPassword": true,
        "torOnly": false
    },
    {
        "id": "gitea",
        "category": "Development",
        "name": "Gitea",
        "version": "1.15.2",
        "tagline": "A painless self-hosted Git service",
        "description": "Gitea is a painless self-hosted Git service. It is similar to GitHub, Bitbucket, and GitLab. It is a community managed lightweight code hosting solution written in Go. Gitea's minimal requirements allow it to run seamlessly on inexpensive hardware like a Raspberry Pi. Features:\n\n- Fully self-hosted and private\n- Issue tracker\n- Account/Organization/Repository management\n- Tor support\n- Repository Git hooks/deploy keys\n- Repository issues, pull requests and wiki\n- Add/Remove repository collaborators\n- Gravatar and custom source\n- Admin panel",
        "developer": "Gitea",
        "website": "https://gitea.io/en-us/",
        "dependencies": [],
        "repo": "https://github.com/go-gitea/gitea",
        "support": "https://discourse.gitea.io",
        "port": 8085,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": "",
        "torOnly": false
    },
    {
        "id": "synapse",
        "category": "Social",
        "name": "Synapse",
        "version": "v1.42.0",
        "tagline": "Matrix reference homeserver",
        "description": "Synapse is a reference \"homeserver\" implementation of Matrix from the core development team at matrix.org, written in Python/Twisted. It is intended to showcase the concept of Matrix and let folks see the spec in the context of a codebase and let you run your own homeserver and generally help bootstrap the ecosystem.\n\nThe easiest way to try out your new Synapse installation is by connecting to it from a web client.\n\nAn easy way to get started is to install the \"Element\" app on your Umbrel and change its Homeserver URL from matrix.org server to your Synapse's Homeserver URL of http://umbrel.local:8008 (or http://<synapse-tor-hidden-service-url> if you are accessing remotely).\n\nIn Matrix, every user runs one or more Matrix clients, which connect through to a Matrix homeserver. The homeserver stores all their personal chat history and user account information - much as a mail client connects through to an IMAP/SMTP server. Just like email, you can either run your own Matrix homeserver and control and own your own communications and history or use one hosted by someone else (e.g. matrix.org) - there is no single point of control or mandatory service provider in Matrix, unlike WhatsApp, Facebook, Hangouts, etc.",
        "developer": "Matrix",
        "website": "https://matrix.org",
        "dependencies": [],
        "repo": "https://github.com/matrix-org/synapse",
        "support": "https://matrix.to/#/#synapse:matrix.org",
        "port": 8008,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": "",
        "torOnly": false
    },
    {
        "id": "element",
        "category": "Social",
        "name": "Element",
        "version": "1.8.4",
        "tagline": "A glossy Matrix client compatible with Synapse",
        "description": "Element is a new type of messaging app. You choose where your messages are stored, putting you in control of your data. You can connect it to the Synapse installation running on your Umbrel. An easy way to get started is to install the \"Synapse\" Matrix homserver on your Umbrel and change Element's Homserver URL from matrix.org to your Synapse's homeserver URL (http://umbrel.local:8008 or http://<synapse-tor-hidden-service-url). \n\nIt gives you access to the Matrix open network, so you can talk to anyone. Element provides a new level of security, adding cross-signed device verification to default end-to-end encryption.\n\nThe very best end-to-end encryption and Element’s unique cross-signed device verification means only those that should be in the conversation can read the messages - no eavesdroppers or imposters.\n\nMost important of all, Element is open; built on the Matrix network, it connects to all other Matrix-based apps as well as bridging into proprietary systems. You can stay in Element while talking to friends and family in other apps.\n\nElement is open source. You know exactly what you’re getting. Full transparency, the freedom to extend and customise with the support of a vibrant community of developers.",
        "developer": "New Vector Ltd",
        "website": "https://element.io",
        "dependencies": [],
        "repo": "https://github.com/vector-im/element-web",
        "support": "https://matrix.to/#/#element-web:matrix.org",
        "port": 8088,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": "",
        "torOnly": false
    },
    {
        "id": "simple-torrent",
        "category": "Networking",
        "name": "SimpleTorrent",
        "version": "1.2.23",
        "tagline": "Download torrents with your Umbrel",
        "description": "SimpleTorrent is a a self-hosted remote torrent client that starts torrents remotely, download sets of files on your Umbrel, which are then retrievable or streamable via web browser over HTTP. This project is a re-branded fork of cloud-torrent by jpillora. Features:\n\n- Individual file download control\n- Run external program on tasks completion: DoneCmd\n- Stops task when seeding ratio reached: SeedRatio\n- Download/Upload speed limiter: UploadRate/DownloadRate\n- Detailed transfer stats in web UI.\n- Torrent Watcher\n- Extra trackers from external source\n- Protocol Handler to magnet:\n- Magnet RSS subscribing supported",
        "developer": "Preston",
        "website": "https://github.com/boypt",
        "dependencies": [],
        "repo": "https://github.com/boypt/simple-torrent",
        "support": "https://github.com/boypt/simple-torrent/issues",
        "port": 8086,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": "",
        "torOnly": false
    },
    {
        "id": "vaultwarden",
        "category": "Password Managers",
        "name": "Vaultwarden",
        "version": "1.22.1",
        "tagline": "Unofficial Bitwarden® compatible server",
        "description": "Vaultwarden (formerly known as Bitwarden_RS) is an alternative implementation of the Bitwarden® server API written in Rust, compatible with upstream Bitwarden® clients*. Vaultwarden is perfect for self-hosting all of your passwords in an encrypted vault on your Umbrel. Vaultwarden is a full implementation of Bitwarden® API that includes:\n\n- Organizations support\n- Attachments\n- Vault API support\n- Serving the static files for Vault interface\n- Website icons API\n- Authenticator and U2F support\n- YubiKey and Duo support\n\n Please note that Vaultwarden is not associated with the Bitwarden® project nor 8bit Solutions LLC. When using this app, please report any bugs or suggestions to us directly, regardless of whatever clients you are using (mobile, desktop, browser, etc), and do not use Bitwarden®'s official support channels.",
        "developer": "Daniel García",
        "website": "https://github.com/dani-garcia",
        "dependencies": [],
        "repo": "https://github.com/dani-garcia/vaultwarden",
        "support": "https://vaultwarden.discourse.group/",
        "port": 8089,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": "",
        "torOnly": true
    },
    {
        "id": "mempool",
        "category": "Explorers",
        "name": "Mempool",
        "version": "2.2.2",
        "tagline": "A mempool visualizer, explorer and fee estimator",
        "description": "Mempool is the official self-hosted version of the fully featured explorer, visualizer, fee estimator, and API service running on mempool.space, an open source project developed and operated for the benefit of the Bitcoin community, with a focus on the emerging transaction fee market to help our transition into a multi-layer ecosystem.\n\nFeatures:\n\n- Live dashboard visualizing the mempool and blockchain\n- Live transaction tracking\n- Search any transaction, block or address\n- Fee estimations\n- Mempool historical data\n- TV View for larger displays as a TV in a cafe or bar\n- View transaction scripts and op_return messages\n- Audio notifications on transaction confirmed and address balance change\n- Multiple languages support\n- JSON APIs",
        "developer": "mempool.space",
        "website": "https://mempool.space/about",
        "dependencies": [
            "bitcoind",
            "electrum"
        ],
        "repo": "https://github.com/mempool/mempool",
        "support": "https://t.me/mempoolspace",
        "port": 3006,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "btc-rpc-explorer",
        "category": "Explorers",
        "name": "BTC RPC Explorer",
        "version": "3.2.0",
        "tagline": "Simple, database-free blockchain explorer",
        "description": "BTC RPC Explorer is a full-featured, self-hosted explorer for the Bitcoin blockchain. With this explorer, you can explore not just the blockchain database, but also explore the functional capabilities of your Umbrel.\n\nIt comes with a network summary dashboard, detailed view of blocks, transactions, addresses, along with analysis tools for viewing stats on miner activity, mempool summary, with fee, size, and age breakdowns. You can also search by transaction ID, block hash/height, and addresses.\n\nIt's time to appreciate the \"fullness\" of your node.",
        "developer": "Dan Janosik",
        "website": "https://explorer.btc21.org",
        "dependencies": [
            "bitcoind",
            "electrum"
        ],
        "repo": "https://github.com/janoside/btc-rpc-explorer",
        "support": "https://github.com/janoside/btc-rpc-explorer/discussions",
        "port": 3002,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "samourai-server",
        "category": "Wallet Servers",
        "name": "Samourai Server",
        "version": "1.12.0",
        "tagline": "Your private backing server for Samourai Wallet",
        "description": "Samourai Server is an exclusive Umbrel app that runs Samourai Dojo and Whirlpool backing servers, and provides you easy step-by-step instructions to connect your Samourai Wallet to them. Samourai Wallet is unrivaled in transaction privacy, but its default configuration is still subject to network level privacy loss.\n\nBy default, Samourai Wallet will connect to its centrally controlled Dojo hosted in Iceland. By hosting your own Samourai Server, you can bypass its servers completely when using Samourai Wallet or Sentinel, and gain total financial sovereignty without any complexity.\n\nBundles Whirlpool CLI v0.10.11.",
        "developer": "Samourai",
        "website": "https://samouraiwallet.com",
        "dependencies": [
            "bitcoind"
        ],
        "repo": "https://github.com/louneskmt/umbrel-samourai-dojo/tree/v1.10.1-umbrel",
        "support": "https://t.me/SamouraiWallet",
        "port": 3005,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "specter-desktop",
        "category": "Wallets",
        "name": "Specter Desktop",
        "version": "1.7.1",
        "tagline": "Multisig with hardware wallets made easy",
        "description": "Specter Desktop connects to the Bitcoin Core running on your Umbrel and functions as a watch-only coordinator for multi-signature and single-key Bitcoin wallets. At the moment Specter Desktop is working with all major hardware wallets including:\n\n- Trezor\n- Ledger\n- KeepKey\n- BitBox02\n- ColdCard (optionally airgapped, using an SD card)\n- Electrum (optionally airgapped, if running Electrum on an airgapped computer/phone)\n- Specter DIY (optionally airgapped, using QR codes)\n- Cobo (airgapped, using QR codes)\n\nSpecter Desktop also supports using the Bitcoin Core on your Umbrel as a hot wallet, by importing or generating a random BIP39 mnemonic, but this feature is experimental and we do not recommend using it at this stage. We plan to add support for other hardware wallets as they come up.",
        "developer": "Crypto Advance",
        "website": "https://specter.solutions",
        "dependencies": [
            "bitcoind"
        ],
        "repo": "https://github.com/cryptoadvance/specter-desktop",
        "support": "https://t.me/spectersupport",
        "port": 25441,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "sphinx-relay",
        "category": "Social",
        "name": "Sphinx Relay",
        "version": "2.2.0",
        "tagline": "Chat and pay over the Lightning Network",
        "description": "Sphinx Relay turns your Lightning node into a personal communication server. Messages are end-to-end encrypted and transmitted over the Bitcoin Lightning Network. Download Sphinx on your phone from https://sphinx.chat and pair it with Sphinx Relay on Umbrel.\n\nCommunication between Sphinx Relay nodes takes place entirely on the Lightning Network, so it is decentralized, untraceable, and encrypted. Messages are encrypted using client public keys on the Sphinx app.\n\nYou can join tribes at https://tribes.sphinx.chat. If you join a podcast tribe, you can listen to the podcast in Sphinx and stream donations to the host.",
        "developer": "Stakwork",
        "website": "https://sphinx.chat",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/stakwork/sphinx-relay",
        "support": "https://t.me/joinchat/Fb4OcRo4LrRD6NXfsNdeeQ",
        "port": 3300,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "/connect",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "ride-the-lightning",
        "category": "Lightning Node Management",
        "name": "Ride The Lightning",
        "version": "0.11.0",
        "tagline": "A powerful dashboard for the Lightning Network",
        "description": "RTL is a full function, device agnostic, web user interface to help manage lightning node operation. It enables full control over your lightning node with rich functionality for Bitcoin base layer and Lightning Network. Some cool features available on RTL are:\n\n- Rich dashboard with two layout options\n- Send/Receive funds on-chain\n- Rich channel management with advanced features like balance score, circular re-balancing etc.\n- Payments and Invoice management with QR codes\n- Routing analysis for the payments forwarded\n- Channel backups\n- Detailed reports on routing and transaction history\n- Optional Loop interface for submarine swaps\n- Customizable UI with multiple color schemes and dark/light modes",
        "developer": "Shahana and Suheb",
        "website": "https://github.com/Ride-The-Lightning/RTL",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/Ride-The-Lightning/RTL",
        "support": "https://github.com/Ride-The-Lightning/RTL/issues/new",
        "port": 3001,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "deterministicPassword": true
    },
    {
        "id": "lightning-terminal",
        "category": "Lightning Node Management",
        "name": "Lightning Terminal",
        "version": "v0.5.2-alpha",
        "tagline": "The easiest way to manage channel liquidity",
        "description": "Lightning Terminal is the easiest way to manage inbound and outbound liquidity on the Lightning Network. Keep your channels open and the funds flowing. It provides a visual interface for interacting with your channels and balances using Loop. \n\nNew: Introducing Lightning Pool, a marketplace for Lightning channels. You can now earn sats by opening new channels to those looking to receive funds on Lightning for a set period of time, or rent a channel to start accepting payments instantly. Join the marketplace and start putting your Bitcoin to work.\n\nWhy use Pool?\n- Earn a return on Lightning capital\n- Rent a channel and start accepting payments instantly\n- Open channels for less with transaction batching\n\nWhy use Loop?\n- Add \"inbound liquidity\" to receive payments\n- Reduce transaction fees by recycling and reusing Lightning channels\n- Send funds to and from users or services that aren't yet Lightning enabled\n- Configurable wait times and \"batching\" allow for further fee savings\n- Refill and offload funds from any number of Lightning channels in a single on-chain transaction",
        "developer": "Lightning Labs",
        "website": "https://lightning.engineering",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/lightninglabs/lightning-terminal",
        "support": "https://github.com/lightninglabs/lightning-terminal/issues/new",
        "port": 3004,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg",
            "4.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "deterministicPassword": true
    },
    {
        "id": "thunderhub",
        "category": "Lightning Node Management",
        "name": "ThunderHub",
        "version": "0.12.30",
        "tagline": "Take full control of your Lightning node",
        "description": "ThunderHub allows you to take full control of your Lightning node with a slick and awesome UI. Explore all the options that ThunderHub has to offer, from sending and receiving Lightning payments, to checking your node's health statistics, and even more advanced options like channel rebalancing and multi-path lightning payments.\n\nManaging and monitoring your node has never been easier with transaction reports, graphs and a huge assortment of different features all bundled inside of this great tool.",
        "developer": "Anthony Potdevin",
        "website": "https://apotdevin.com",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/apotdevin/thunderhub",
        "support": "https://t.me/thunderhub",
        "port": 3000,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "deterministicPassword": true
    },
    {
        "id": "lnbits",
        "category": "Finance",
        "name": "LNbits",
        "version": "9f67b98",
        "tagline": "Multi-user wallet management system",
        "description": "LNbits is a simple multi-user and account system for Lightning Network that can be used for creating separate Lightning wallets for friends and family members. You can also create multiple accounts for yourself to mitigate the risk of exposing applications to your full balance via unique API keys for each wallet.\n\nLNbits is packaged with tools to help manage funds, such as a table of transactions, line chart of spending, export to CSV, and more to come. It provides an extendable platform for expanding Lightning Network functionality via LNbits extension framework, and can also be used as a fallback wallet for the LNURL scheme.",
        "developer": "LNbits",
        "website": "https://github.com/lnbits/lnbits",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/lnbits/lnbits",
        "support": "https://t.me/lnbits",
        "port": 3007,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "btcpay-server",
        "category": "Finance",
        "name": "BTCPay Server",
        "version": "1.3.4",
        "tagline": "Accept Bitcoin payments with 0 fees & no 3rd party",
        "description": "BTCPay Server is a payment processor that allows you to receive payments in Bitcoin (and altcoins) directly, with no fees, transaction cost or a middleman. It is a non-custodial invoicing system which eliminates the involvement of a third-party.\n\nPayments with BTCPay Server go directly to your wallet, which increases the privacy and security. Your private keys are never uploaded to your Umbrel. There is no address re-use, since each invoice generates a new address deriving from your xpubkey.\n\nYou can not only to attach an unlimited number of stores and use the Lightning Network but also become a payment processor for others. Thanks to the apps built on top of it, you can use BTCPay to receive donations, start a crowdfunding campaign or have an in-store Point of Sale.\n\nPlease note: Due to your BTCPay instance running on your local network connecting remote applications, such as Shopify or WordPress for example, will fail to connect.",
        "developer": "BTCPay Server Foundation",
        "website": "https://btcpayserver.org",
        "dependencies": [
            "bitcoind",
            "lnd"
        ],
        "repo": "https://github.com/btcpayserver/btcpayserver",
        "support": "https://chat.btcpayserver.org",
        "port": 3003,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "bluewallet",
        "category": "Wallet Servers",
        "name": "BlueWallet Lightning",
        "version": "1.3.3",
        "tagline": "Connect BlueWallet to your Lightning node",
        "description": "Run BlueWallet in the most private and secure way possible by removing 3rd parties and connecting it directly to your Umbrel's Lightning node.\n\nYou can pair multiple BlueWallet accounts, so your friends and family can pair their BlueWallet with your Umbrel for a trust-minimized setup.",
        "developer": "BlueWallet",
        "website": "https://lndhub.io",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/BlueWallet/LndHub",
        "support": "https://t.me/bluewallet",
        "port": 3008,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "",
        "defaultPassword": ""
    },
    {
        "id": "squeaknode",
        "category": "Social",
        "name": "Squeaknode",
        "version": "0.1.169",
        "tagline": "A peer-to-peer status feed with Lightning monetization",
        "description": "The Squeaknode app allows you to create, view, buy, and sell squeaks. A squeak is a single post that can contain up to 280 characters.\n\nThe Squeaknode timeline is ordered by the height of the block hash embedded in each squeak. Each squeak is signed with a digital signature of the private key of the author. Squeaks can be downloaded from any peer to any peer, but they remain locked until the downloader makes a Lightning payment to decrypt the content.",
        "developer": "Jonathan Zernik",
        "website": "https://squeaknode.org",
        "dependencies": [
            "bitcoind",
            "lnd"
        ],
        "repo": "https://github.com/yzernik/squeaknode",
        "support": "https://github.com/yzernik/squeaknode/discussions",
        "port": 12994,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultUsername": "umbrel",
        "deterministicPassword": true
    },
    {
        "id": "krystal-bull",
        "category": "Finance",
        "name": "Krystal Bull",
        "version": "1.8.0-18-4f081b9d",
        "tagline": "Become an oracle and create Bitcoin bets",
        "description": "Krystal Bull allows you to become a Bitcoin oracle. An oracle allows information from the real world (financial markets, sporting events, elections, etc) to be used to create and settle Bitcoin bets.\n\nThe oracle is a crucial component for Discreet Log Contracts (DLC). Without a trustworthy oracle, you cannot create a bet on Bitcoin using DLCs. Trustworthy oracles are a building block to realizing Bitcoin DeFi.\n\nTo see some example oracles, please visit oracle.suredbits.com.\n\nWARNING: This version of Krystal Bull is an early alpha release for testing. It's not secure, please don't use it for anything serious.",
        "developer": "SuredBits",
        "website": "https://suredbits.com/",
        "dependencies": [],
        "repo": "https://github.com/bitcoin-s/krystal-bull",
        "support": "https://join.slack.com/t/suredbits/shared_invite/zt-eavycu0x-WQL7XOakzQo8tAy7jHHZUw",
        "port": 3010,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultPassword": ""
    },
    {
        "id": "lnmarkets",
        "category": "Finance",
        "name": "LN Markets",
        "version": "1.1.0",
        "tagline": "Trade Bitcoin derivatives on Lightning",
        "description": "LN Markets is the first Lightning-native Bitcoin derivatives trading platform.\n\nLN Markets enables traders to take minimal counterparty risk: you can trade directly from your Lightning wallet for instant and almost costless transactions. Since March 2020, we have processed over $200 million of trading volume, with a median fee of 1 sat for instant P&L delivery to your wallet.\n\nThis Umbrel App gives you another way to interact with LN Markets: you can directly deposit, withdraw, get trading stats and get instantly connected to your account to take positions as usual. More features may come in the future!\n\nThank you for your support and let’s keep building the future of finance together!",
        "developer": "LN Markets",
        "website": "https://lnmarkets.com",
        "dependencies": [
            "lnd"
        ],
        "repo": "https://github.com/lnmarkets/umbrel",
        "support": "https://www.t.me/lnmarkets",
        "port": 4242,
        "gallery": [
            "1.jpg",
            "2.jpg",
            "3.jpg"
        ],
        "path": "",
        "defaultPassword": ""
    }
]
